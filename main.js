(()=>{var n={426:(n,e,t)=>{"use strict";t.d(e,{Z:()=>C});var r=t(537),i=t.n(r),o=t(645),a=t.n(o),s=t(667),A=t.n(s),c=new URL(t(743),t.b),l=new URL(t(646),t.b),d=new URL(t(339),t.b),u=new URL(t(591),t.b),p=a()(i()),f=A()(c),m=A()(l),h=A()(d),B=A()(u);p.push([n.id,'@font-face {\n  font-family: "Rubik Iso";\n  src: url('+f+');\n  font-weight: 400;\n  font-style: normal;\n}\n\n@font-face {\n  font-family: "PT Sans Narrow";\n  src: url('+m+');\n  font-weight: 400;\n  font-style: normal;\n}\n\n@font-face {\n  font-family: "PT Sans Narrow";\n  src: url('+h+');\n  font-weight: 700;\n  font-style: bold;\n}\n\n@media screen and (max-width: 1000px) {\n  .menu .title-text {\n    font-size: 10vw;\n  }\n\n  .player-form .name-wrap {\n    flex-direction: column;\n  }\n\n  .field-wrap {\n    margin-bottom: 10px;\n  }\n\n  .frame {\n    --frame-width: 80%;\n    --frame-height: 90%;\n    width: 80%;\n  }\n\n  .map {\n    margin-top: 25px;\n    margin-bottom: 25px;\n  }\n\n  .board {\n    width: 100%;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    --view-size: calc(90vh / 3);\n    --square-size: calc(var(--view-size) / 10);\n  }\n\n  .frame .info {\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-around;\n    width: 100%;\n  }\n}\n\n:root {\n  --view-size: calc(50vw / 3);\n  --square-size: calc(var(--view-size) / 10);\n  --water-color: #e6eefb;\n  --grid-lines: 0.5px solid rgb(104, 104, 104);\n  --miss: white;\n  --hit: rgb(255, 133, 133);\n  --frame-width: 60vw;\n  --frame-height: 65vh;\n}\n\nbody {\n  background-repeat: repeat;\n  font-family: "PT Sans Narrow";\n  overflow: hidden;\n  margin: 0;\n  padding: 0;\n}\n\n.content {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  width: 100vw;\n  background: url('+B+');\n  overflow: hidden;\n}\n\n.board-wrap {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  justify-content: space-around;\n  align-items: center;\n}\n\n.frame {\n  box-sizing: border-box;\n  height: var(--frame-height);\n  width: var(--frame-width);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  background-color: white;\n}\n\n.menu {\n  height: var(--frame-height);\n  width: var(--frame-width);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  background-color: #fff;\n  z-index: 100;\n}\n\n.title {\n  width: min-content;\n}\n\n.title-text {\n  overflow: hidden;\n  font-family: "Rubik Iso";\n  width: 0 auto;\n  font-size: 64px;\n  animation: typing 1.5s steps(15, end);\n}\n\n@keyframes typing {\n  from {\n    width: 0;\n  }\n  to {\n    width: 100%;\n  }\n}\n\n.board-square.selection-hover-bad {\n  background-color: rgb(246, 109, 109);\n}\n\n.field-wrap {\n  display: flex;\n  flex-direction: column;\n  margin-right: 25px;\n}\n\n.p2-wrap {\n  display: flex;\n  flex-direction: column;\n}\n\n.player-form {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.board {\n  display: flex;\n  justify-content: space-around;\n  width: 100%;\n  height: 50%;\n  position: relative;\n}\n\n.blind {\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  background-color: #fff;\n  visibility: hidden;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  z-index: 100;\n}\n\n.placer-bg {\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  background-color: #fff;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  z-index: 100;\n  margin: 10px;\n}\n\n.place-map > .selection-hover {\n  background-color: rgb(143, 255, 143);\n}\n\n.info {\n  height: 10%;\n  width: 75%;\n  display: flex;\n  flex: 0;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.turn-wrap {\n  width: 33%;\n  display: flex;\n  justify-content: center;\n}\n\n.move-wrap {\n  width: 33%;\n  display: flex;\n  justify-content: center;\n}\n\n.btn-wrap {\n  width: 33%;\n  display: flex;\n  justify-content: center;\n}\n\n.map {\n  height: var(--view-size);\n  width: var(--view-size);\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.map-square {\n  box-sizing: border-box;\n  height: var(--square-size);\n  width: var(--square-size);\n  border: var(--grid-lines);\n  background-color: var(--water-color);\n  border-radius: 3px;\n}\n\n.own-board {\n  height: var(--view-size);\n  width: var(--view-size);\n  display: flex;\n  flex-wrap: wrap;\n  position: relative;\n}\n\n.board-square {\n  box-sizing: border-box;\n  height: var(--square-size);\n  width: var(--square-size);\n  border: var(--grid-lines);\n  background-color: var(--water-color);\n  border-radius: 3px;\n}\n\n.board-square.ship-unhit {\n  background-color: var(--water-color);\n}\n\n.board-square.ship-hit {\n  background-color: red;\n}\n\n.board-square.ship-sunk {\n  background-color: #ff6565;\n}\n\n.board-square.board-miss {\n  background-color: var(--miss);\n}\n\n.map-square.map-hit {\n  background-color: red;\n}\n\n.map-square.map-miss {\n  background-color: var(--miss);\n}\n\n.map-square.map-sunk {\n  background-color: #ff6565;\n}\n\n.ship {\n  position: absolute;\n  border: 2px solid rgb(69, 69, 69);\n  background-color: rgba(50, 50, 50, 0.25);\n  border-radius: 3px;\n  box-sizing: border-box;\n}\n\n.rotate {\n  margin: 10px;\n}\n\n#start-button {\n  border: var(--grid-lines);\n  border-radius: 3px;\n  background-color: rgb(252, 252, 252);\n  color: black;\n  cursor: pointer;\n  width: 25%;\n  min-width: max-content;\n  min-height: max-content;\n  height: 25px;\n}\n\n#start-button:hover {\n  background-color: #ff6565;\n  color: white;\n}\n\n.name-wrap {\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: nowrap;\n  margin-bottom: 10px;\n}\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:['@font-face {\n  font-family: "Rubik Iso";\n  src: url("./fonts/Rubik_Iso/RubikIso-Regular.ttf");\n  font-weight: 400;\n  font-style: normal;\n}\n\n@font-face {\n  font-family: "PT Sans Narrow";\n  src: url(./fonts/PT_Sans_Narrow/PTSansNarrow-Regular.ttf);\n  font-weight: 400;\n  font-style: normal;\n}\n\n@font-face {\n  font-family: "PT Sans Narrow";\n  src: url(./fonts/PT_Sans_Narrow/PTSansNarrow-Bold.ttf);\n  font-weight: 700;\n  font-style: bold;\n}\n\n@media screen and (max-width: 1000px) {\n  .menu .title-text {\n    font-size: 10vw;\n  }\n\n  .player-form .name-wrap {\n    flex-direction: column;\n  }\n\n  .field-wrap {\n    margin-bottom: 10px;\n  }\n\n  .frame {\n    --frame-width: 80%;\n    --frame-height: 90%;\n    width: 80%;\n  }\n\n  .map {\n    margin-top: 25px;\n    margin-bottom: 25px;\n  }\n\n  .board {\n    width: 100%;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    --view-size: calc(90vh / 3);\n    --square-size: calc(var(--view-size) / 10);\n  }\n\n  .frame .info {\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-around;\n    width: 100%;\n  }\n}\n\n:root {\n  --view-size: calc(50vw / 3);\n  --square-size: calc(var(--view-size) / 10);\n  --water-color: #e6eefb;\n  --grid-lines: 0.5px solid rgb(104, 104, 104);\n  --miss: white;\n  --hit: rgb(255, 133, 133);\n  --frame-width: 60vw;\n  --frame-height: 65vh;\n}\n\nbody {\n  background-repeat: repeat;\n  font-family: "PT Sans Narrow";\n  overflow: hidden;\n  margin: 0;\n  padding: 0;\n}\n\n.content {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  width: 100vw;\n  background: url("./imgs/bg_tile.png");\n  overflow: hidden;\n}\n\n.board-wrap {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  justify-content: space-around;\n  align-items: center;\n}\n\n.frame {\n  box-sizing: border-box;\n  height: var(--frame-height);\n  width: var(--frame-width);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  background-color: white;\n}\n\n.menu {\n  height: var(--frame-height);\n  width: var(--frame-width);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  background-color: #fff;\n  z-index: 100;\n}\n\n.title {\n  width: min-content;\n}\n\n.title-text {\n  overflow: hidden;\n  font-family: "Rubik Iso";\n  width: 0 auto;\n  font-size: 64px;\n  animation: typing 1.5s steps(15, end);\n}\n\n@keyframes typing {\n  from {\n    width: 0;\n  }\n  to {\n    width: 100%;\n  }\n}\n\n.board-square.selection-hover-bad {\n  background-color: rgb(246, 109, 109);\n}\n\n.field-wrap {\n  display: flex;\n  flex-direction: column;\n  margin-right: 25px;\n}\n\n.p2-wrap {\n  display: flex;\n  flex-direction: column;\n}\n\n.player-form {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.board {\n  display: flex;\n  justify-content: space-around;\n  width: 100%;\n  height: 50%;\n  position: relative;\n}\n\n.blind {\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  background-color: #fff;\n  visibility: hidden;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  z-index: 100;\n}\n\n.placer-bg {\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  background-color: #fff;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  z-index: 100;\n  margin: 10px;\n}\n\n.place-map > .selection-hover {\n  background-color: rgb(143, 255, 143);\n}\n\n.info {\n  height: 10%;\n  width: 75%;\n  display: flex;\n  flex: 0;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.turn-wrap {\n  width: 33%;\n  display: flex;\n  justify-content: center;\n}\n\n.move-wrap {\n  width: 33%;\n  display: flex;\n  justify-content: center;\n}\n\n.btn-wrap {\n  width: 33%;\n  display: flex;\n  justify-content: center;\n}\n\n.map {\n  height: var(--view-size);\n  width: var(--view-size);\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.map-square {\n  box-sizing: border-box;\n  height: var(--square-size);\n  width: var(--square-size);\n  border: var(--grid-lines);\n  background-color: var(--water-color);\n  border-radius: 3px;\n}\n\n.own-board {\n  height: var(--view-size);\n  width: var(--view-size);\n  display: flex;\n  flex-wrap: wrap;\n  position: relative;\n}\n\n.board-square {\n  box-sizing: border-box;\n  height: var(--square-size);\n  width: var(--square-size);\n  border: var(--grid-lines);\n  background-color: var(--water-color);\n  border-radius: 3px;\n}\n\n.board-square.ship-unhit {\n  background-color: var(--water-color);\n}\n\n.board-square.ship-hit {\n  background-color: red;\n}\n\n.board-square.ship-sunk {\n  background-color: #ff6565;\n}\n\n.board-square.board-miss {\n  background-color: var(--miss);\n}\n\n.map-square.map-hit {\n  background-color: red;\n}\n\n.map-square.map-miss {\n  background-color: var(--miss);\n}\n\n.map-square.map-sunk {\n  background-color: #ff6565;\n}\n\n.ship {\n  position: absolute;\n  border: 2px solid rgb(69, 69, 69);\n  background-color: rgba(50, 50, 50, 0.25);\n  border-radius: 3px;\n  box-sizing: border-box;\n}\n\n.rotate {\n  margin: 10px;\n}\n\n#start-button {\n  border: var(--grid-lines);\n  border-radius: 3px;\n  background-color: rgb(252, 252, 252);\n  color: black;\n  cursor: pointer;\n  width: 25%;\n  min-width: max-content;\n  min-height: max-content;\n  height: 25px;\n}\n\n#start-button:hover {\n  background-color: #ff6565;\n  color: white;\n}\n\n.name-wrap {\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: nowrap;\n  margin-bottom: 10px;\n}\n'],sourceRoot:""}]);const C=p},645:n=>{"use strict";n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,i,o){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(r)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(a[A]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);r&&a[l[0]]||(void 0!==o&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=o),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),i&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=i):l[4]="".concat(i)),e.push(l))}},e}},667:n=>{"use strict";n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{"use strict";n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(i," */");return[e].concat([o]).join("\n")}return[e].join("\n")}},379:n=>{"use strict";var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var o={},a=[],s=0;s<n.length;s++){var A=n[s],c=r.base?A[0]+r.base:A[0],l=o[c]||0,d="".concat(c," ").concat(l);o[c]=l+1;var u=t(d),p={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var f=i(p,r);r.byIndex=s,e.splice(s,0,{identifier:d,updater:f,references:1})}a.push(d)}return a}function i(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,i){var o=r(n=n||[],i=i||{});return function(n){n=n||[];for(var a=0;a<o.length;a++){var s=t(o[a]);e[s].references--}for(var A=r(n,i),c=0;c<o.length;c++){var l=t(o[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}o=A}}},569:n=>{"use strict";var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{"use strict";n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{"use strict";n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{"use strict";n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var i=void 0!==t.layer;i&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,i&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{"use strict";n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},181:n=>{const e=document.querySelector(".map"),t=document.querySelector(".own-board"),r=document.querySelector(".turn-text"),i=document.querySelector(".move-text"),o=document.querySelector(".blind"),a=document.querySelector(".btn-wrap"),s=document.querySelector(".info"),A=document.querySelector(".menu"),c=(()=>{function n(n,e){r.textContent=e?`Game over. ${n.playerName} wins.`:`${n.playerName}'s turn`}function c(n,e,t,r,i,o=!1){const a=r,s=document.querySelectorAll("div.place-map>div.board-square"),A=document.querySelector(".rotate"),l=document.querySelector(".start-btn");A.style.visibility="visible",A.addEventListener("click",(()=>{a.textContent="",u(e,r),c(n,e,t,r,Math.abs(i-1),o),d(e,r)})),s.forEach((s=>{s.addEventListener("mouseover",(()=>{const p=JSON.parse(s.getAttribute("data-board-coord")),f=i,m=Math.abs(i-1),h=p[m],B=[];if(h+t<11&&e.checkPathEmpty(h,p[f],t,i)){for(let n=h;n<h+t;n+=1){let e;e=1===i?document.querySelector(`[data-board-coord="[${n}, ${p[1]}]"]`):document.querySelector(`[data-board-coord="[${p[0]}, ${n}]"]`),B.push(e)}B.forEach((n=>{n.classList.add("selection-hover")})),s.addEventListener("mouseleave",(()=>{B.forEach((n=>{n.classList.remove("selection-hover")}))})),s.addEventListener("click",(()=>{let s;s=1===i?[p[m]+(t-1),p[f]]:[p[f],p[m]+(t-1)],p.reverse(),s.reverse(),e.placeShip(t,p,s),a.textContent="",u(e,r),d(e,r),5===t?c(n,e,4,r,i,!1):4===t?c(n,e,3,r,i,!0):3===t&&o?c(n,e,3,r,i,!1):3!==t||o?2===t&&o?c(n,e,2,r,i,!1):2!==t||o||(A.style.visibility="hidden",l.style.visibility="visible"):c(n,e,2,r,i,!0)}))}else{for(let n=h;n<10&&n<h+t-1;n+=1){let e;e=1===i?document.querySelector(`[data-board-coord="[${n}, ${p[1]}]"]`):document.querySelector(`[data-board-coord="[${p[0]}, ${n}]"]`),B.push(e)}B.forEach((n=>{n.classList.add("selection-hover-bad")})),s.addEventListener("mouseleave",(()=>{B.forEach((n=>{n.classList.remove("selection-hover-bad")}))}))}}))}))}function l(n,e,t,r){const i=window.matchMedia("(max-width: 1000px)");let o;o=i.matches?3:50/30;const a=document.createElement("div");a.classList.add("ship");let s=1,A=1;e[0]-n[0]>0?(s=t*o,A=o):(A=t*o,s=o),i.matches?(a.style.height=`${s}vh`,a.style.width=`${A}vh`,a.style.bottom=o*n[0]+"vh",a.style.left=o*n[1]+"vh"):(a.style.height=`${s}vw`,a.style.width=`${A}vw`,a.style.bottom=o*n[0]+"vw",a.style.left=o*n[1]+"vw"),r.appendChild(a)}function d(n,e){n.ships.forEach((n=>{l(n.start,n.end,n.length,e)}))}function u(n,e){n.board.slice().reverse().forEach(((n,t)=>{const r=9-t;n.forEach(((n,t)=>{const i=t%10,o=document.createElement("div");o.classList.add("board-square"),o.setAttribute("data-board-coord",`[${i}, ${r}]`),n&&("object"==typeof n?n.isHit?n.ship.isSunk()?o.classList.add("ship-sunk"):o.classList.add("ship-hit"):o.classList.add("ship-unhit"):"miss"===n&&o.classList.add("board-miss")),e.appendChild(o)}))}))}function p(n,r){e.textContent="",t.textContent="",function(n){n.slice().reverse().forEach(((n,t)=>{const r=9-t;n.forEach(((n,t)=>{const i=t%10,o=document.createElement("div");o.classList.add("map-square"),o.setAttribute("data-map-coord",`[${i}, ${r}]`),n&&("hit"===n?o.classList.add("map-hit"):"miss"===n?o.classList.add("map-miss"):"sunk"===n&&o.classList.add("map-sunk")),e.appendChild(o)}))}))}(n),u(r,t),d(r,t)}function f(){const n=document.createElement("button");n.classList.add("restart-btn"),n.textContent="Play Again",a.appendChild(n),n.addEventListener("click",(()=>{e.textContent="",t.textContent="",r.textContent="",i.textContent="",A.style.visibility="visible",n.remove()}))}function m(n,r,i,a){o.textContent="",o.style.visibility="visible",s.style.visibility="hidden",e.style.visibility="hidden",t.style.visibility="hidden";const A=document.createElement("p");A.classList.add("pass-text"),A.textContent=`Pass the device to ${n.playerName}`;const c=document.createElement("button");c.textContent="Begin Turn",o.appendChild(A),o.appendChild(c),c.addEventListener("click",(()=>{h(n,r,i,a),o.style.visibility="hidden",s.style.visibility="visible",e.style.visibility="visible",t.style.visibility="visible"}))}function h(e,t,r,o){if(!1===e.com)p(e.map,t),B(e,t,r,o),n(e,!1);else{const a=e.comMove(o);p(r.map,o),n(r,!1),i.textContent=`${e.playerName}: ${a}`,"All ships have been sunk."===a?(n(e,!0),f()):B(r,o,e,t)}}function B(e,t,r,o){document.querySelectorAll(".map-square").forEach((s=>{const A=JSON.parse(s.getAttribute("data-map-coord")).reverse();s.addEventListener("click",(()=>{const s=e.attack(o,A);"Invalid attack: square has already been attacked"!==s?(i.textContent=`${e.playerName}: ${s}`,"All ships have been sunk."===s?(p(e.map,t),n(e,!0),f()):!1===e.com?(p(e.map,t),function(e,t,r,i){const o=document.createElement("button");o.classList.add("pass-button"),o.textContent="Pass turn",a.appendChild(o),o.addEventListener("click",(()=>{e.com?(o.remove(),n(e,!1),setTimeout((()=>{h(e,t,r,i)}),300)):(m(e,t,r,i),o.remove())}))}(r,o,e,t)):h(r,o,e,t)):i.textContent=`${s}. Try a different square.`}))}))}return{drawBoard:p,makeClickable:B,drawShip:l,drawShipPlacer:function(n,e,t,i){o.textContent="",o.style.visibility="visible";const a=document.createElement("div");a.classList.add("placer-bg"),a.style.visibility="visible",o.appendChild(a);const s=document.createElement("p");s.classList.add("placement-text"),s.textContent=`${n.playerName}: place your ships`,a.appendChild(s);const A=document.createElement("div");A.classList.add("own-board"),A.classList.add("place-map"),a.appendChild(A);const l=document.createElement("button");l.classList.add("rotate"),l.textContent="Rotate",a.appendChild(l);const f=document.createElement("button");f.classList.add("start-btn"),f.textContent="End Placements",f.style.visibility="hidden",a.appendChild(f);let h=!1;f.addEventListener("click",(C=>{if(C.preventDefault(),t.com||h)t.com?(i.placeRandom(),p(n.map,e),B(n,e,t,i),o.style.visibility="hidden",a.style.visibility="hidden",r.textContent=`${n.playerName}'s turn`,a.removeChild(f)):(m(n,e,t,i),a.removeChild(f));else{A.textContent="";const n=l.cloneNode(!0);a.replaceChild(n,l),s.textContent=`${t.playerName}: place your ships`,u(i,A),c(t,i,5,A,1,!1),d(i,A),h=!0,f.style.visibility="hidden"}})),u(e,A),c(n,e,5,A,1,!1),d(e,A)}}})();n.exports=c},498:(n,e,t)=>{const r=t(497);n.exports=()=>{const n=[],e=[];function t(t,i,o){const a=[...i,...o];for(let n=0;n<a.length;n+=1)if(a[n]>10||a[n]<0)return"Invalid ship placement";const s=r(t);e.push({ship:s,length:t,start:i,end:o});for(let e=i[0];o[0]-e>=0;e+=1)for(let t=i[1];o[1]-t>=0;t+=1)n[e][t]={ship:s,isHit:!1};return"Ship placed"}function i(e,t,r,i){for(let o=e;o<e+r;o+=1)if(0===i){if(n[o][t])return!1}else if(n[t][o])return!1;return!0}function o(n){const e=Math.floor(Math.random()*n),r=Math.floor(10*Math.random()),a=Math.floor(2*Math.random());i(e,r,n,a)?0===a?t(n,[e,r],[e+(n-1),r]):t(n,[r,e],[r,e+(n-1)]):o(n)}return function(){for(let e=0;e<10;e+=1)n[e]=new Array(10).fill(null)}(),{board:n,placeShip:t,receiveAttack:function(e){const t=n[e[0]][e[1]];if(!t)return n[e[0]][e[1]]="miss","Miss";if("miss"===t)return"Invalid attack: square has already been attacked";if("object"==typeof t&&t.isHit)return"Invalid attack: square has already been attacked";t.isHit=!0;const r=t.ship.hit();return function(){let e=!0;return n.forEach((n=>{n.forEach((n=>{n&&"object"==typeof n&&!1===n.isHit&&(e=!1)}))})),e}()?"All ships have been sunk.":r},placeRandom:function(){o(5),o(4),o(3),o(3),o(2)},ships:e,checkPathEmpty:i}}},507:n=>{n.exports=(n,e="Player 1")=>{const t=[];let r=e;function i(n,e){const r=n.receiveAttack(e);return"Miss"===r?t[e[0]][e[1]]=r.toLowerCase():"Hit"===r?t[e[0]][e[1]]="hit":"You sunk my battleship"!==r&&"All ships have been sunk."!==r||(t[e[0]][e[1]]="sunk"),function(n){t.forEach(((e,r)=>{e.forEach(((e,i)=>{(function(n,e){const t=n[e[0]][e[1]];return!(!t||"object"!=typeof t||!t.ship.isSunk())})(n,[r,i])&&(t[r][i]="sunk")}))}))}(n.board),r}n&&(r="Computer"),function(){for(let n=0;n<10;n+=1)t[n]=new Array(10).fill(null)}();const o=(()=>{const n=[];for(let e=0;e<10;e+=1)for(let t=0;t<10;t+=1)n.push([e,t]);return n})();let a=[];return{map:t,attack:i,comMove:function(n){const e=o.map((n=>JSON.stringify(n)));var r;let s,A;if(r=e,a=[],t.forEach(((n,e)=>{n.forEach(((n,i)=>{if("hit"===t[e][i]){const n=e,t=i;r.includes(`[${n+1},${t}]`)&&a.push([n+1,t]),r.includes(`[${n-1},${t}]`)&&a.push([n-1,t]),r.includes(`[${n},${t+1}]`)&&a.push([n,t+1]),r.includes(`[${n},${t-1}]`)&&a.push([n,t-1])}}))})),a.length){const n=Math.floor(Math.random()*a.length);[s]=a.splice(n,1),A=e.indexOf(`[${s[0]},${s[1]}]`)}else A=Math.floor(Math.random()*o.length),s=o[A];return o.splice(A,1),e.splice(A,1),i(n,s)},com:n,playerName:r}}},497:n=>{n.exports=n=>{let e=0;function t(){return e>=n}return{hit:function(){return e+=1,t()?"You sunk my battleship":"Hit"},isSunk:t}}},339:(n,e,t)=>{"use strict";n.exports=t.p+"6c0b55dfa0028e0768af.ttf"},646:(n,e,t)=>{"use strict";n.exports=t.p+"68e86cce5b8c98f6305b.ttf"},743:(n,e,t)=>{"use strict";n.exports=t.p+"d5094e4572c98e06cb4c.ttf"},591:(n,e,t)=>{"use strict";n.exports=t.p+"a3dafbe530d7d1c9f406.png"}},e={};function t(r){var i=e[r];if(void 0!==i)return i.exports;var o=e[r]={id:r,exports:{}};return n[r](o,o.exports,t),o.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");r.length&&(n=r[r.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{"use strict";var n=t(379),e=t.n(n),r=t(795),i=t.n(r),o=t(569),a=t.n(o),s=t(565),A=t.n(s),c=t(216),l=t.n(c),d=t(589),u=t.n(d),p=t(426),f={};f.styleTagTransform=u(),f.setAttributes=A(),f.insert=a().bind(null,"head"),f.domAPI=i(),f.insertStyleElement=l(),e()(p.Z,f),p.Z&&p.Z.locals&&p.Z.locals;const m=t(498),h=t(507),B=t(181),C=document.querySelector(".menu"),E=document.querySelector("#p1-name"),b=document.querySelector("#p2-name"),v=document.querySelector("#p2-com"),y=document.querySelector("#start-button");v.addEventListener("click",(()=>{b.classList.contains("name-disabled")?(b.removeAttribute("disabled"),b.classList.remove("name-disabled"),b.setAttribute("placeholder","Player Two")):(b.classList.add("name-disabled"),b.setAttribute("disabled",null),b.setAttribute("placeholder","Computer"))})),y.addEventListener("click",(n=>{let e,t;n.preventDefault(),C.style.visibility="hidden";const r=m(),i=m();e=E.value?h(!1,E.value):h(!1,"Player One"),t=v.checked?h(!0):b.value?h(!1,b.value):h(!1,"Player Two"),B.drawShipPlacer(e,r,t,i)}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,